{
  "db_name": "PostgreSQL",
  "query": "\n        with u_t as ( -- unused tokens for each voting\n            select \n                v.id, \n                coalesce(nullif(\n                    -- filter all unactivated and voided tokens here\n                    array_agg(row(t.token, t.alias)) filter (where t.state = 'activated'::token_state), \n                '{NULL}'), '{}') as unused_tokens\n            from voting v \n            cross join token t\n            left join has_voted hv on hv.token_token = t.token and hv.voting_id = v.id\n            where hv.token_token is null\n            group by v.id\n        ), \n        t_v as ( -- count of votes for each voting\n            select\n                v.id,\n                count(hv.token_token) as total_votes\n            from voting v\n            left join has_voted hv on v.id = hv.voting_id\n            group by v.id\n        ),\n        v_c as ( -- votings and their corresponding candidates\n            select\n                v.id,\n                v.name,\n                v.description,\n                v.state,\n                coalesce(nullif(array_agg(c.name), '{null}'), '{}') as candidates\n            from voting v\n            left join candidate c on v.id = c.voting_id\n            group by v.id\n        )\n        select \n            v_c.id,\n            v_c.name,\n            v_c.description,\n            v_c.state as \"voting_state!: VotingStateWithoutResults\",\n            v_c.candidates as \"candidates!: Vec<String>\",\n            u_t.unused_tokens as \"unused_tokens!: Vec<(String, Alias)>\",\n            t_v.total_votes\n        from v_c natural join u_t natural join t_v;\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "description",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "voting_state!: VotingStateWithoutResults",
        "type_info": {
          "Custom": {
            "name": "voting_state",
            "kind": {
              "Enum": [
                "draft",
                "open",
                "closed"
              ]
            }
          }
        }
      },
      {
        "ordinal": 4,
        "name": "candidates!: Vec<String>",
        "type_info": "TextArray"
      },
      {
        "ordinal": 5,
        "name": "unused_tokens!: Vec<(String, Alias)>",
        "type_info": "RecordArray"
      },
      {
        "ordinal": 6,
        "name": "total_votes",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": []
    },
    "nullable": [
      false,
      false,
      false,
      false,
      null,
      null,
      null
    ]
  },
  "hash": "5e8d2466e105a032ac17d6f9acb925b7f2b4d49a41fab960e324e195ae2ce92d"
}
